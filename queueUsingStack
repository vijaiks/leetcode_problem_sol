class MyQueue:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.data = []
        self.size = 0
        

    def push(self, x: int) -> None:
        """
        Push element x to the back of queue.
        """
        self.data.insert(0, x)
        self.size += 1
        

    def pop(self) -> int:
        """
        Removes the element from in front of queue and returns that element.
        """
        if self.size != 0:
            self.size -= 1
            return self.data.pop(self.size)        
        

    def peek(self) -> int:
        """
        Get the front element.
        """
        if self.size != 0:
            return self.data[-1]
        

    def empty(self) -> bool:
        """
        Returns whether the queue is empty.
        """
        return self.size == 0
    def print(self):
        """
        print the data in q.
        """
        print(self.data)   

#driver function
if __name__ == "__main__":

	# MyQueue object will be instantiated and called as such:
	q = MyQueue()
	q.push(5)
	q.push(6)
	q.push(7)	
	#queue is = [5,6,7]
	print("queue after pushing 5,6,7")
	q.print()
	print("peek element from front", q.peek())
	print(q.pop())
	print("queue after pop()/from front")
	q.print()
	print("is q empty?", q.empty())
	print(q.pop())
	print(q.pop())
	print(q.pop())
	print(q.pop())
	print("is q empty?", q.empty())
